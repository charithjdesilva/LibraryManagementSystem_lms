/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package librarymanagementsystem;

import java.awt.Color;
import java.awt.Font;
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Charith
 */
public class login extends javax.swing.JFrame {

    /**
     * Creates new form login
     */
    Connection conn = null;
    String utype = "";
    
    public login() {
        initComponents();
        userIcon.requestFocus();
        txtPassword.setEchoChar((char) 0);
        clock();
    }
    
    public void loginVerify()
    {
        try {
            Class.forName("java.sql.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost/librarymanagementsystem?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "");
            if (conn != null) {
                Statement st1 = conn.createStatement();
                Statement st2 = conn.createStatement();
                String selQueAdm = "SELECT * FROM administrator WHERE admUsername='" + txtUsername.getText() + "'";
                String selQueMem = "SELECT * FROM member WHERE mUsername='" + txtUsername.getText() + "'";
                ResultSet rs1 = st1.executeQuery(selQueAdm);
                ResultSet rs2 = st2.executeQuery(selQueMem);
                if (rs1.next()) {
                    String user = rs1.getString("admUsername");
                    String pass = rs1.getString ("password");
                    String firstN = rs1.getString ("firstName");
                    String lastN = rs1.getString ("lastName");
                    String uname = firstN + " " + lastN;
                    utype = "admin";
                    if (txtPassword.getText().equals(pass)) {
                        new admindashboard(uname,user,utype).setVisible(true);
                        this.dispose();
                    } 
                    else {
                        JOptionPane.showMessageDialog(null, "Please check your password again....","ERROR!!!",JOptionPane.ERROR_MESSAGE);
                        txtPassword.setText("password");
                        txtPassword.requestFocus();
                    }
                }
                else if (rs2.next()) {
                    String user = rs2.getString("mUsername");
                    String pass = rs2.getString ("password");
                    String firstN = rs2.getString ("firstName");
                    String lastN = rs2.getString ("lastName");
                    String uname = firstN + " " + lastN;
                    utype = "member";
                    if (txtPassword.getText().equals(pass)) {
                        new dashboard(uname, user,utype).setVisible(true);
                        this.dispose();
                    } 
                    else {
                        JOptionPane.showMessageDialog(null, "Please check your password again....","ERROR!!!",JOptionPane.ERROR_MESSAGE);
                        txtPassword.setText("password");
                        txtPassword.requestFocus();
                    }
                }
                else {
                    JOptionPane.showMessageDialog(null, "User does not exist....","ERROR!!!",JOptionPane.ERROR_MESSAGE);
                    txtUsername.setText("username");
                    txtPassword.setText("password");
                    txtPassword.setEchoChar((char) 0);
                    txtUsername.requestFocus();
                }
                conn.close();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Database connectivity is NOT successful...." + "\n" + ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        txtUsername = new javax.swing.JTextField();
        userIcon = new javax.swing.JLabel();
        btnLogin = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        iconExit = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(10, 13, 28));
        setMaximumSize(new java.awt.Dimension(1036, 587));
        setMinimumSize(new java.awt.Dimension(1036, 587));
        setUndecorated(true);
        setResizable(false);

        panel1.setBackground(new java.awt.Color(10, 13, 28));

        txtUsername.setBackground(new java.awt.Color(10, 13, 28));
        txtUsername.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtUsername.setForeground(new java.awt.Color(218, 219, 189));
        txtUsername.setText("username");
        txtUsername.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(218, 219, 189), 1, true));
        txtUsername.setMaximumSize(new java.awt.Dimension(90, 27));
        txtUsername.setMinimumSize(new java.awt.Dimension(90, 27));
        txtUsername.setNextFocusableComponent(txtPassword);
        txtUsername.setPreferredSize(new java.awt.Dimension(90, 27));
        txtUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUsernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUsernameFocusLost(evt);
            }
        });
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        userIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarymanagementsystem/resources/icons8_user_male_circle_210px.png"))); // NOI18N
        userIcon.setText("jLabel1");
        userIcon.setNextFocusableComponent(txtUsername);
        userIcon.setPreferredSize(new java.awt.Dimension(210, 210));

        btnLogin.setBackground(new java.awt.Color(218, 219, 189));
        btnLogin.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(10, 13, 28));
        btnLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnLogin.setText("Login");
        btnLogin.setOpaque(true);
        btnLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLoginMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLoginMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLoginMouseExited(evt);
            }
        });

        txtPassword.setBackground(new java.awt.Color(10, 13, 28));
        txtPassword.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtPassword.setForeground(new java.awt.Color(218, 219, 189));
        txtPassword.setText("password");
        txtPassword.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(218, 219, 189), 1, true));
        txtPassword.setNextFocusableComponent(btnLogin);
        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPasswordFocusLost(evt);
            }
        });
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        iconExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarymanagementsystem/resources/icons8_shutdown_30px.png"))); // NOI18N
        iconExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                iconExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                iconExitMouseExited(evt);
            }
        });

        lblTime.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTime.setForeground(new java.awt.Color(218, 219, 189));
        lblTime.setText("jLabel1");

        lblDate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblDate.setForeground(new java.awt.Color(218, 219, 189));
        lblDate.setText("jLabel1");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addComponent(userIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58))))
                    .addGroup(javax.swing.GroupLayout.Alignment.CENTER, panel1Layout.createSequentialGroup()
                        .addGap(413, 413, 413)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLogin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(413, 413, 413))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTime, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                    .addComponent(lblDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(iconExit)
                .addGap(52, 52, 52))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(91, Short.MAX_VALUE)
                .addComponent(userIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(iconExit)
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDate)
                        .addGap(27, 27, 27))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMouseClicked
        // TODO add your handling code here:
        loginVerify();
    }//GEN-LAST:event_btnLoginMouseClicked

    
    private void btnLoginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMouseEntered
        // change button color (highlighted)
        Font boldFont = new Font(btnLogin.getFont().getName(),Font.PLAIN,btnLogin.getFont().getSize()+1);
        btnLogin.setFont(boldFont);
        
        btnLogin.setBackground(new Color(240, 240, 228));
    }//GEN-LAST:event_btnLoginMouseEntered

    private void btnLoginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMouseExited
        // change button color (highlight removed)
        Font boldFont = new Font(btnLogin.getFont().getName(),Font.PLAIN,btnLogin.getFont().getSize()-1);
        btnLogin.setFont(boldFont);
        
        btnLogin.setBackground(new Color(218, 219, 189));
    }//GEN-LAST:event_btnLoginMouseExited

    private void txtUsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsernameFocusGained
        // remove placeholder text
        if(txtUsername.getText().equals("username"))
        {
            txtUsername.setText("");
        }
        txtUsername.setForeground(Color.WHITE);
    }//GEN-LAST:event_txtUsernameFocusGained

    private void txtUsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsernameFocusLost
        // add placeholder text
        if(txtUsername.getText().equals(""))
        {
            txtUsername.setText("username");
        }
        txtUsername.setForeground(new Color(218, 219, 189));
    }//GEN-LAST:event_txtUsernameFocusLost

    private void txtPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusGained
        // remove placeholder text
        if(txtPassword.getText().equals("password"))
        {
            txtPassword.setText("");
            txtPassword.setEchoChar('*');
        }
        txtPassword.setForeground(Color.WHITE);
    }//GEN-LAST:event_txtPasswordFocusGained

    private void txtPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusLost
       // add placeholder text
        if(txtPassword.getText().equals(""))
        {
            txtPassword.setText("password");
            txtPassword.setEchoChar((char) 0);
        }
        txtPassword.setForeground(new Color(218, 219, 189));
    }//GEN-LAST:event_txtPasswordFocusLost

    String exitIconLPath = "src\\librarymanagementsystem\\resources\\icons8_shutdown_30px_1.png";
    ImageIcon exitIconL = new ImageIcon(exitIconLPath);
    
    String exitIconDPath = "src\\librarymanagementsystem\\resources\\icons8_shutdown_30px.png";
    ImageIcon exitIconD = new ImageIcon(exitIconDPath);
    
    private void iconExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconExitMouseEntered
        // TODO add your handling code here:
        exitIconL.getImage().flush();
        iconExit.setIcon(exitIconL);
    }//GEN-LAST:event_iconExitMouseEntered

    private void iconExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconExitMouseExited
        // TODO add your handling code here:
        exitIconD.getImage().flush();
        iconExit.setIcon(exitIconD);
    }//GEN-LAST:event_iconExitMouseExited

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
        if(!txtUsername.getText().equals("username")){
            txtPassword.requestFocus();
        }
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
        if(!txtPassword.getText().equals("password")){
            btnLogin.requestFocus();
            loginVerify();
        }
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void iconExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconExitMouseClicked
        // exit program
        System.exit(0);
    }//GEN-LAST:event_iconExitMouseClicked

    private void clock(){
        Thread th=new Thread(){
            public void run(){
                try{
                    for(;;){
                        Calendar cl = new GregorianCalendar();
                        int day = cl.get(Calendar.DAY_OF_MONTH);
                        int month = 1+cl.get(Calendar.MONTH);
                        int year = cl.get(Calendar.YEAR);
                        
                        int second = cl.get(Calendar.SECOND);
                        int min = cl.get(Calendar.MINUTE);
                        int hour = cl.get(Calendar.HOUR);
                        int am_pm = cl.get(Calendar.AM_PM);
                        
                        String d_n = "";
                        String s_day,s_month,s_second,s_min,s_hour;
                        if (am_pm==1) {
                            d_n="PM";
                        }
                        else{
                            d_n="AM";
                        }
                        if (day<10) {
                            s_day="0"+day;
                        }
                        else{
                            s_day = Integer.toString(day);
                        }
                        if (month<10) {
                            s_month="0"+month;
                        }
                        else{
                            s_month = Integer.toString(month);
                        }
                        if (second<10) {
                            s_second="0"+second;
                        }
                        else{
                            s_second = Integer.toString(second);
                        }
                        if (min<10) {
                            s_min="0"+min;
                        }
                        else{
                            s_min = Integer.toString(min);
                        }
                        if (hour<10) {
                            s_hour="0"+hour;
                        }
                        else{
                            s_hour = Integer.toString(hour);
                        }
                        lblTime.setText(""+s_hour+":"+s_min+":"+s_second+" "+d_n+"");
                        lblDate.setText(""+s_day+"/"+s_month+"/"+year+"");
                        sleep(1000);
                    }
                }
                catch(Exception ex){
                    ex.printStackTrace();
                }
            }
        };
        th.start();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnLogin;
    private javax.swing.JLabel iconExit;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblTime;
    private java.awt.Panel panel1;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JLabel userIcon;
    // End of variables declaration//GEN-END:variables
}
