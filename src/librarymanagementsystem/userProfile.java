/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package librarymanagementsystem;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Charith
 */
public class userProfile extends javax.swing.JFrame {

    /**
     * Creates new form addBook
     */
    public userProfile() {
        initComponents();
    }
    
    String uname = "";
    String user = "";
    String utype = "";
    
    String firstName = "";
    String lastName = "";
    String phoneNo = "";
    String nic = "";
    String password = "";

    public userProfile(String uname, String user, String utype) {
        initComponents();
        this.uname = uname;
        this.user = user;
        this.utype = utype;
        userProfDet();
        txtPassword.setEchoChar('*');
        txtConfirm.setEchoChar('*');
        getUserDet();
    }
    
    void getUserDet()
    {
        try {
            Class.forName("java.sql.Driver");
            Connection conn = null;
            conn = DriverManager.getConnection("jdbc:mysql://localhost/librarymanagementsystem?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "");
            if (conn != null) {
                Statement st1 = conn.createStatement();
                Statement st2 = conn.createStatement();
                String selQue = "";
                if(utype == "admin")
                {
                    selQue = "SELECT * FROM administrator WHERE admUsername='" + user + "'";
                    ResultSet rs1 = st1.executeQuery(selQue);
                    if (rs1.next()) {
                        firstName = rs1.getString("firstName");
                        lastName = rs1.getString("lastName");
                        phoneNo = rs1.getString("phoneNumber");
                        nic = rs1.getString("nicNumber"); 
                        password = rs1.getString("password"); 
                    } 
                }
                else
                {
                    selQue = "SELECT * FROM member WHERE mUsername='" + user + "'";
                    ResultSet rs1 = st1.executeQuery(selQue);
                    if (rs1.next()) {
                        firstName = rs1.getString("firstName");
                        lastName = rs1.getString("lastName");
                        phoneNo = rs1.getString("phoneNumber");
                        nic = rs1.getString("nicNumber");   
                        password = rs1.getString("password"); 
                    }
                }
                txtFristName.setText(firstName);
                txtLastName.setText(lastName);
                txtPhoneNo.setText(phoneNo);
                txtNic.setText(nic);
            }
            conn.close();
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Database connectivity is NOT successful...." + "\n" + ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnExit = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblBookNauthor = new javax.swing.JLabel();
        lblISBN = new javax.swing.JLabel();
        lblBookStat = new javax.swing.JLabel();
        btnGoback = new javax.swing.JLabel();
        txtFristName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtPhoneNo = new javax.swing.JTextField();
        btnClear = new javax.swing.JLabel();
        btnEditOCon = new javax.swing.JLabel();
        lblBookNauthor1 = new javax.swing.JLabel();
        lblISBN1 = new javax.swing.JLabel();
        rbChangePass = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        txtConfirm = new javax.swing.JPasswordField();
        lblISBN3 = new javax.swing.JLabel();
        txtNic = new javax.swing.JTextField();
        lblBookNauthor2 = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1151, 657));
        setMinimumSize(new java.awt.Dimension(1151, 657));
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(10, 13, 28));
        jPanel1.setLayout(null);

        btnExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarymanagementsystem/resources/icoExitD.png"))); // NOI18N
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnExitMouseExited(evt);
            }
        });
        jPanel1.add(btnExit);
        btnExit.setBounds(1100, 10, 40, 40);

        jPanel2.setBackground(new java.awt.Color(10, 13, 28));

        lblBookNauthor.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        lblBookNauthor.setForeground(new java.awt.Color(218, 219, 189));
        lblBookNauthor.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBookNauthor.setText("First name");

        lblISBN.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        lblISBN.setForeground(new java.awt.Color(218, 219, 189));
        lblISBN.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblISBN.setText("Last name");

        lblBookStat.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        lblBookStat.setForeground(new java.awt.Color(218, 219, 189));
        lblBookStat.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBookStat.setText("Phone no.");

        btnGoback.setBackground(new java.awt.Color(218, 219, 189));
        btnGoback.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnGoback.setForeground(new java.awt.Color(10, 13, 28));
        btnGoback.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnGoback.setText("Go back");
        btnGoback.setOpaque(true);
        btnGoback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGobackMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGobackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnGobackMouseExited(evt);
            }
        });

        txtFristName.setBackground(new java.awt.Color(10, 13, 28));
        txtFristName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtFristName.setForeground(new java.awt.Color(218, 219, 189));
        txtFristName.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(218, 219, 189), 1, true));
        txtFristName.setEnabled(false);
        txtFristName.setMaximumSize(new java.awt.Dimension(90, 27));
        txtFristName.setMinimumSize(new java.awt.Dimension(90, 27));
        txtFristName.setNextFocusableComponent(txtLastName);
        txtFristName.setPreferredSize(new java.awt.Dimension(90, 27));
        txtFristName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFristNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFristNameFocusLost(evt);
            }
        });
        txtFristName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFristNameActionPerformed(evt);
            }
        });

        txtLastName.setBackground(new java.awt.Color(10, 13, 28));
        txtLastName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtLastName.setForeground(new java.awt.Color(218, 219, 189));
        txtLastName.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(218, 219, 189), 1, true));
        txtLastName.setEnabled(false);
        txtLastName.setMaximumSize(new java.awt.Dimension(90, 27));
        txtLastName.setMinimumSize(new java.awt.Dimension(90, 27));
        txtLastName.setNextFocusableComponent(txtPhoneNo);
        txtLastName.setPreferredSize(new java.awt.Dimension(90, 27));
        txtLastName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtLastNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLastNameFocusLost(evt);
            }
        });
        txtLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastNameActionPerformed(evt);
            }
        });

        txtPhoneNo.setBackground(new java.awt.Color(10, 13, 28));
        txtPhoneNo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtPhoneNo.setForeground(new java.awt.Color(218, 219, 189));
        txtPhoneNo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(218, 219, 189), 1, true));
        txtPhoneNo.setEnabled(false);
        txtPhoneNo.setMaximumSize(new java.awt.Dimension(90, 27));
        txtPhoneNo.setMinimumSize(new java.awt.Dimension(90, 27));
        txtPhoneNo.setNextFocusableComponent(txtNic);
        txtPhoneNo.setPreferredSize(new java.awt.Dimension(90, 27));
        txtPhoneNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPhoneNoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPhoneNoFocusLost(evt);
            }
        });
        txtPhoneNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneNoActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(218, 219, 189));
        btnClear.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClear.setForeground(new java.awt.Color(10, 13, 28));
        btnClear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnClear.setText("Clear");
        btnClear.setOpaque(true);
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnClearMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnClearMouseExited(evt);
            }
        });

        btnEditOCon.setBackground(new java.awt.Color(218, 219, 189));
        btnEditOCon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnEditOCon.setForeground(new java.awt.Color(10, 13, 28));
        btnEditOCon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEditOCon.setText("Edit");
        btnEditOCon.setOpaque(true);
        btnEditOCon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditOConMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEditOConMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEditOConMouseExited(evt);
            }
        });

        lblBookNauthor1.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        lblBookNauthor1.setForeground(new java.awt.Color(218, 219, 189));
        lblBookNauthor1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBookNauthor1.setText("NIC no.");

        lblISBN1.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        lblISBN1.setForeground(new java.awt.Color(218, 219, 189));
        lblISBN1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblISBN1.setText("New");

        rbChangePass.setBackground(new java.awt.Color(10, 13, 28));
        rbChangePass.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        rbChangePass.setForeground(new java.awt.Color(218, 219, 189));
        rbChangePass.setText("Change password");
        rbChangePass.setEnabled(false);
        rbChangePass.setNextFocusableComponent(txtPassword);
        rbChangePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbChangePassActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(218, 219, 189));
        jLabel1.setOpaque(true);

        txtPassword.setBackground(new java.awt.Color(10, 13, 28));
        txtPassword.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtPassword.setForeground(new java.awt.Color(218, 219, 189));
        txtPassword.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(218, 219, 189), 1, true));
        txtPassword.setEnabled(false);
        txtPassword.setNextFocusableComponent(txtConfirm);
        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPasswordFocusLost(evt);
            }
        });
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        txtConfirm.setBackground(new java.awt.Color(10, 13, 28));
        txtConfirm.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtConfirm.setForeground(new java.awt.Color(218, 219, 189));
        txtConfirm.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(218, 219, 189), 1, true));
        txtConfirm.setEnabled(false);
        txtConfirm.setNextFocusableComponent(btnEditOCon);
        txtConfirm.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtConfirmFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtConfirmFocusLost(evt);
            }
        });
        txtConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConfirmActionPerformed(evt);
            }
        });

        lblISBN3.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        lblISBN3.setForeground(new java.awt.Color(218, 219, 189));
        lblISBN3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblISBN3.setText("Confirm");

        txtNic.setBackground(new java.awt.Color(10, 13, 28));
        txtNic.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtNic.setForeground(new java.awt.Color(218, 219, 189));
        txtNic.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(218, 219, 189), 1, true));
        txtNic.setEnabled(false);
        txtNic.setMaximumSize(new java.awt.Dimension(90, 27));
        txtNic.setMinimumSize(new java.awt.Dimension(90, 27));
        txtNic.setNextFocusableComponent(rbChangePass);
        txtNic.setPreferredSize(new java.awt.Dimension(90, 27));
        txtNic.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNicFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNicFocusLost(evt);
            }
        });
        txtNic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNicActionPerformed(evt);
            }
        });

        lblBookNauthor2.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        lblBookNauthor2.setForeground(new java.awt.Color(218, 219, 189));
        lblBookNauthor2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBookNauthor2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarymanagementsystem/resources/icons8_user_male_circle_210px.png"))); // NOI18N

        lblUsername.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(218, 219, 189));
        lblUsername.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUsername.setText("janedoe12345");
        lblUsername.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblUsernameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblUsernameMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBookNauthor)
                            .addComponent(lblISBN)
                            .addComponent(lblBookStat))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPhoneNo, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                            .addComponent(txtLastName, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                            .addComponent(txtFristName, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                            .addComponent(lblUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblBookNauthor2)
                        .addGap(98, 98, 98)))
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(btnGoback, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(30, 30, 30))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(lblISBN1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblBookNauthor1)
                                .addGap(75, 75, 75)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNic, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(btnEditOCon, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(rbChangePass)
                            .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblISBN3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBookNauthor1)
                            .addComponent(txtNic, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(rbChangePass)
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblISBN1)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblISBN3)
                            .addComponent(txtConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGoback, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEditOCon, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)))
                .addGap(94, 94, 94))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblBookNauthor2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUsername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBookNauthor)
                    .addComponent(txtFristName, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblISBN)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBookStat)
                    .addComponent(txtPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(99, 99, 99))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1151, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 567, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblUsernameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblUsernameMouseEntered
        // TODO add your handling code here:
        
    }//GEN-LAST:event_lblUsernameMouseEntered

    private void lblUsernameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblUsernameMouseExited
        // TODO add your handling code here:
        
    }//GEN-LAST:event_lblUsernameMouseExited

    private void btnExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseClicked
        // TODO add your handling code here:
        int res = JOptionPane.showConfirmDialog(null,"Are you sure you want to Logout?","Logout?",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(res==0){
            login lf = new login();
            this.dispose();
            lf.show();
        }
    }//GEN-LAST:event_btnExitMouseClicked

    private void btnExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseEntered
        // TODO add your handling code here:
        exitIconL.getImage().flush();
        btnExit.setIcon(exitIconL);
    }//GEN-LAST:event_btnExitMouseEntered

    private void btnExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseExited
        // TODO add your handling code here:
        exitIconL.getImage().flush();
        btnExit.setIcon(exitIconD);
    }//GEN-LAST:event_btnExitMouseExited

    private void btnGobackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGobackMouseClicked
        // TODO add your handling code here:
        if(utype=="admin")
        {
            admindashboard df = new admindashboard(uname, user, utype);
            df.show();
        }
        else
        {
            dashboard df = new dashboard(uname, user, utype);
            df.show();
        }
        this.dispose();
    }//GEN-LAST:event_btnGobackMouseClicked

    private void btnGobackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGobackMouseEntered
        // TODO add your handling code here:
        Font boldFont = new Font(btnGoback.getFont().getName(),Font.PLAIN,btnGoback.getFont().getSize());
        btnGoback.setFont(boldFont);

        btnGoback.setBackground(new Color(240, 240, 228));
    }//GEN-LAST:event_btnGobackMouseEntered

    private void btnGobackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGobackMouseExited
        // TODO add your handling code here:
        Font boldFont = new Font(btnGoback.getFont().getName(),Font.PLAIN,btnGoback.getFont().getSize());
        btnGoback.setFont(boldFont);

        btnGoback.setBackground(new Color(218, 219, 189));
    }//GEN-LAST:event_btnGobackMouseExited

    private void txtFristNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFristNameFocusGained
        // remove placeholder text
        txtFristName.setForeground(Color.WHITE);
    }//GEN-LAST:event_txtFristNameFocusGained

    private void txtFristNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFristNameFocusLost
        // add placeholder text
        txtFristName.setForeground(new Color(218, 219, 189));
    }//GEN-LAST:event_txtFristNameFocusLost

    private void txtFristNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFristNameActionPerformed
        // TODO add your handling code here:
        txtLastName.requestFocus();
    }//GEN-LAST:event_txtFristNameActionPerformed

    private void txtLastNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLastNameFocusGained
        // TODO add your handling code here:
        txtLastName.setForeground(Color.WHITE);
    }//GEN-LAST:event_txtLastNameFocusGained

    private void txtLastNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLastNameFocusLost
        // TODO add your handling code here:
        txtLastName.setForeground(new Color(218, 219, 189));
    }//GEN-LAST:event_txtLastNameFocusLost

    private void txtLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastNameActionPerformed
        // TODO add your handling code here:
        txtPhoneNo.requestFocus();
    }//GEN-LAST:event_txtLastNameActionPerformed

    private void txtPhoneNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPhoneNoFocusGained
        // TODO add your handling code here:
        txtPhoneNo.setForeground(Color.WHITE);
    }//GEN-LAST:event_txtPhoneNoFocusGained

    private void txtPhoneNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPhoneNoFocusLost
        // TODO add your handling code here:
        txtPhoneNo.setForeground(new Color(218, 219, 189));
    }//GEN-LAST:event_txtPhoneNoFocusLost

    private void txtPhoneNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneNoActionPerformed
        // TODO add your handling code here:
        txtNic.requestFocus();
    }//GEN-LAST:event_txtPhoneNoActionPerformed

    private void btnClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseClicked
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btnClearMouseClicked

    void clear()
    {
        txtPhoneNo.setText(phoneNo);
        txtLastName.setText(lastName);
        txtFristName.setText(firstName);
        txtNic.setText(nic);
        txtPassword.setText("");
        txtConfirm.setText("");
        txtFristName.requestFocus();
        rbChangePass.setEnabled(true);
        rbChangePass.setSelected(false);
        txtPassword.setEnabled(false);
        txtConfirm.setEnabled(false);
    }
    
    private void btnClearMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseEntered
        // TODO add your handling code here:
        Font boldFont = new Font(btnClear.getFont().getName(),Font.PLAIN,btnClear.getFont().getSize());
        btnClear.setFont(boldFont);

        btnClear.setBackground(new Color(240, 240, 228));
    }//GEN-LAST:event_btnClearMouseEntered

    private void btnClearMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseExited
        // TODO add your handling code here:
        Font boldFont = new Font(btnClear.getFont().getName(),Font.PLAIN,btnClear.getFont().getSize());
        btnClear.setFont(boldFont);

        btnClear.setBackground(new Color(218, 219, 189));
    }//GEN-LAST:event_btnClearMouseExited

    
    private void btnEditOConMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditOConMouseClicked
        // TODO add your handling code here:
        if(btnEditOCon.getText().equals("Update"))
        {
            updateUser();
        }
        else
        {
            editEnable();
        }
    }//GEN-LAST:event_btnEditOConMouseClicked

    void editEnable()
    {
        btnEditOCon.setText("Update");
        txtFristName.setEnabled(true);
        txtLastName.setEnabled(true);
        txtPhoneNo.setEnabled(true);
        txtNic.setEnabled(true);
        rbChangePass.setEnabled(true);
    }
    
    void editDisable()
    {
        btnEditOCon.setText("Edit");
        txtFristName.setEnabled(false);
        txtLastName.setEnabled(false);
        txtPhoneNo.setEnabled(false);
        txtNic.setEnabled(false);
        rbChangePass.setEnabled(false);
        txtPassword.setText("");
        txtConfirm.setText("");
        txtPassword.setEnabled(false);
        txtConfirm.setEnabled(false);
    }
    
    void updateUser()
    {
        if(rbChangePass.isSelected() == true)
        {
            if(txtFristName.getText().equals("") || txtLastName.getText().equals("")|| txtPhoneNo.getText().equals("") || txtNic.getText().equals("") || txtPassword.getText().equals("") || txtConfirm.getText().equals(""))
            {
                JOptionPane.showMessageDialog(this, "Please fill all text fields" + "\n","Fill all fields!", JOptionPane.INFORMATION_MESSAGE);
            }
            else if((txtPassword.getText().length() < 8))
            {
                JOptionPane.showMessageDialog(this, "Password should at least be 8 characters long!" + "\n","Password is too short!", JOptionPane.INFORMATION_MESSAGE);
            }
            else if((txtPassword.getText().equals("password")))
            {
                JOptionPane.showMessageDialog(this, "Password should not be \"password\"" + "\n","use a different password!", JOptionPane.INFORMATION_MESSAGE);
            }
            else if(!(txtPassword.getText().equals(txtConfirm.getText())))
            {
                JOptionPane.showMessageDialog(this, "Password does not match with the confirm passwrod!" + "\n","Passwords does not match!", JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
                password = txtPassword.getText();
                updateQ();
            }
        }
        else
        {
            if(txtFristName.getText().equals("") || txtLastName.getText().equals("")|| txtPhoneNo.getText().equals("") || txtNic.getText().equals(""))
            {
                JOptionPane.showMessageDialog(this, "Please fill all text fields" + "\n","Fill all fields!", JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
                updateQ();
            }
        }
    }
    
    void updateQ()
    {
        try {
            Connection conn = null;
            Class.forName("java.sql.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost/librarymanagementsystem?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "");
            if (conn != null) {
                if(utype=="admin"){
                    String upQue = "UPDATE administrator SET firstName=?, lastName=?, nicNumber=?, phoneNumber=?, password=?" + "WHERE admUsername=?";
                    PreparedStatement ps = conn.prepareCall(upQue);
                    ps.setString(6, user);
                    ps.setString(1, txtFristName.getText());
                    ps.setString(2, txtLastName.getText());
                    ps.setString(3, txtNic.getText());
                    ps.setString(4, txtPhoneNo.getText());
                    ps.setString(5, password);
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Administrator " + user + " was Successfully Updated to the System!", "Updated!", JOptionPane.INFORMATION_MESSAGE);
                    ps.close();
                }
                else{
                    String upQue = "UPDATE member SET firstName=?, lastName=?, nicNumber=?, phoneNumber=?, password=?" + "WHERE mUsername=?";
                    PreparedStatement ps = conn.prepareCall(upQue);
                    ps.setString(6, user);
                    ps.setString(1, txtFristName.getText());
                    ps.setString(2, txtLastName.getText());
                    ps.setString(3, txtNic.getText());
                    ps.setString(4, txtPhoneNo.getText());
                    ps.setString(5, txtPassword.getText());
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Member " + user + " was Successfully Updated to the System!", "Updated!", JOptionPane.INFORMATION_MESSAGE);
                    ps.close();
                }
                editDisable();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Database connectivity is NOT successful...." + "\n" + ex);
        }
    }
    
    private void btnEditOConMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditOConMouseEntered
        // TODO add your handling code here:
        Font boldFont = new Font(btnEditOCon.getFont().getName(),Font.PLAIN,btnEditOCon.getFont().getSize());
        btnEditOCon.setFont(boldFont);

        btnEditOCon.setBackground(new Color(240, 240, 228));
    }//GEN-LAST:event_btnEditOConMouseEntered

    private void btnEditOConMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditOConMouseExited
        // TODO add your handling code here:
        Font boldFont = new Font(btnEditOCon.getFont().getName(),Font.PLAIN,btnEditOCon.getFont().getSize());
        btnEditOCon.setFont(boldFont);

        btnEditOCon.setBackground(new Color(218, 219, 189));
    }//GEN-LAST:event_btnEditOConMouseExited

    private void txtPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusGained
        // remove placeholder text
        txtPassword.setForeground(Color.WHITE);
    }//GEN-LAST:event_txtPasswordFocusGained

    private void txtPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusLost
        // add placeholder text
        txtPassword.setForeground(new Color(218, 219, 189));
    }//GEN-LAST:event_txtPasswordFocusLost

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
        txtConfirm.requestFocus();
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtConfirmFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtConfirmFocusGained
        // TODO add your handling code here:
        txtConfirm.setForeground(Color.WHITE);
    }//GEN-LAST:event_txtConfirmFocusGained

    private void txtConfirmFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtConfirmFocusLost
        // TODO add your handling code here:
        txtConfirm.setForeground(new Color(218, 219, 189));
    }//GEN-LAST:event_txtConfirmFocusLost

    private void txtConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConfirmActionPerformed
        // TODO add your handling code here:
        btnEditOCon.requestFocus();
    }//GEN-LAST:event_txtConfirmActionPerformed

    private void txtNicFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNicFocusGained
        // TODO add your handling code here:
        txtConfirm.setForeground(Color.WHITE);
    }//GEN-LAST:event_txtNicFocusGained

    private void txtNicFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNicFocusLost
        // TODO add your handling code here:
        txtConfirm.setForeground(new Color(218, 219, 189));
    }//GEN-LAST:event_txtNicFocusLost

    private void txtNicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNicActionPerformed
        // TODO add your handling code here:
        txtPassword.requestFocus();
    }//GEN-LAST:event_txtNicActionPerformed

    private void rbChangePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbChangePassActionPerformed
        // TODO add your handling code here:
        if(rbChangePass.isSelected())
        {
            txtPassword.setEnabled(true);
            txtConfirm.setEnabled(true);
        }
        else
        {
            txtPassword.setEnabled(false);
            txtConfirm.setEnabled(false);
        }
        txtPassword.setText("");
        txtConfirm.setText("");
    }//GEN-LAST:event_rbChangePassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userProfile().setVisible(true);
            }
        });
    }
    
    private void userProfDet()
    {
        lblUsername.setText(user);
    }
    
    String exitIconLPath = "src\\librarymanagementsystem\\resources\\icoExitL.png";
    ImageIcon exitIconL = new ImageIcon(exitIconLPath);
    
    String exitIconDPath = "src\\librarymanagementsystem\\resources\\icoExitD.png";
    ImageIcon exitIconD = new ImageIcon(exitIconDPath);
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnClear;
    private javax.swing.JLabel btnEditOCon;
    private javax.swing.JLabel btnExit;
    private javax.swing.JLabel btnGoback;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblBookNauthor;
    private javax.swing.JLabel lblBookNauthor1;
    private javax.swing.JLabel lblBookNauthor2;
    private javax.swing.JLabel lblBookStat;
    private javax.swing.JLabel lblISBN;
    private javax.swing.JLabel lblISBN1;
    private javax.swing.JLabel lblISBN3;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JRadioButton rbChangePass;
    private javax.swing.JPasswordField txtConfirm;
    private javax.swing.JTextField txtFristName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtNic;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPhoneNo;
    // End of variables declaration//GEN-END:variables
}
